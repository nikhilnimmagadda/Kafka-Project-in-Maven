[2020-02-03 18:37:08,191] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@25618e91, name=log4j:logger=kafka.controller (kafka.controller)
[2020-02-03 18:46:15,349] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@25618e91, name=log4j:logger=kafka.controller (kafka.controller)
[2020-02-03 18:47:30,023] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-03 18:47:30,053] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-02-03 18:47:30,053] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-03 18:47:30,057] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-03 18:47:30,061] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-03 18:47:30,064] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-03 18:47:30,089] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 28) (kafka.controller.KafkaController)
[2020-02-03 18:47:30,092] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-03 18:47:30,097] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-03 18:47:30,112] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-03 18:47:30,112] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-03 18:47:30,113] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-03 18:47:30,113] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-03 18:47:30,114] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-03 18:47:30,116] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-02-03 18:47:30,117] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-03 18:47:30,117] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-03 18:47:30,117] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-03 18:47:30,117] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-03 18:47:30,124] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 18:47:30,125] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 18:47:30,130] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 18:47:30,130] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 18:47:30,131] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-03 18:47:30,131] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-03 18:47:30,133] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.30.191.222:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-03 18:47:30,136] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-02-03 18:47:30,136] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-02-03 18:47:30,140] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-03 18:47:30,141] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-03 18:47:30,141] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-03 18:47:30,147] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-03 18:47:30,149] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-03 18:47:30,164] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-03 18:47:35,167] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-03 18:47:35,167] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-03 18:47:35,168] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-03 18:52:35,171] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-03 18:52:35,172] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-03 18:52:35,172] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-03 18:55:27,299] INFO [Controller id=0] New topics: [Set(first_topic)], deleted topics: [Set()], new partition replica assignment [Map(first_topic-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), first_topic-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), first_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-02-03 18:55:27,300] INFO [Controller id=0] New partition creation callback for first_topic-2,first_topic-1,first_topic-0 (kafka.controller.KafkaController)
[2020-02-03 18:57:35,173] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-03 18:57:35,174] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-03 18:57:35,174] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(first_topic-2 -> Vector(0), first_topic-1 -> Vector(0), first_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-02-03 18:57:35,179] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-03 18:57:35,182] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-03 19:00:33,658] INFO [Controller id=0] New topics: [Set(second_topic)], deleted topics: [Set()], new partition replica assignment [Map(second_topic-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), second_topic-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), second_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), second_topic-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), second_topic-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), second_topic-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-02-03 19:00:33,661] INFO [Controller id=0] New partition creation callback for second_topic-3,second_topic-5,second_topic-0,second_topic-2,second_topic-1,second_topic-4 (kafka.controller.KafkaController)
[2020-02-03 19:01:18,230] DEBUG [Controller id=0] Delete topics listener fired for topics second_topic to be deleted (kafka.controller.KafkaController)
[2020-02-03 19:01:18,230] INFO [Controller id=0] Starting topic deletion for topics second_topic (kafka.controller.KafkaController)
[2020-02-03 19:01:18,231] INFO [Topic Deletion Manager 0] Handling deletion for topics second_topic (kafka.controller.TopicDeletionManager)
[2020-02-03 19:01:18,234] INFO [Topic Deletion Manager 0] Deletion of topic second_topic (re)started (kafka.controller.TopicDeletionManager)
[2020-02-03 19:01:18,234] INFO [Topic Deletion Manager 0] Topic deletion callback for second_topic (kafka.controller.TopicDeletionManager)
[2020-02-03 19:01:18,237] INFO [Topic Deletion Manager 0] Partition deletion callback for second_topic-3,second_topic-5,second_topic-0,second_topic-2,second_topic-1,second_topic-4 (kafka.controller.TopicDeletionManager)
[2020-02-03 19:01:18,256] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=second_topic,Partition=3,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=5,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=4,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-03 19:01:18,257] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=second_topic,Partition=3,Replica=0],[Topic=second_topic,Partition=1,Replica=0],[Topic=second_topic,Partition=5,Replica=0],[Topic=second_topic,Partition=0,Replica=0],[Topic=second_topic,Partition=2,Replica=0],[Topic=second_topic,Partition=4,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-03 19:01:18,258] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=second_topic,Partition=3,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=5,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=2,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=4,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-03 19:01:18,332] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(second_topic-3 -> KAFKA_STORAGE_ERROR, second_topic-5 -> KAFKA_STORAGE_ERROR, second_topic-0 -> KAFKA_STORAGE_ERROR, second_topic-2 -> KAFKA_STORAGE_ERROR, second_topic-1 -> KAFKA_STORAGE_ERROR, second_topic-4 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2020-02-03 19:01:18,333] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=second_topic,Partition=3,Replica=0],[Topic=second_topic,Partition=1,Replica=0],[Topic=second_topic,Partition=5,Replica=0],[Topic=second_topic,Partition=0,Replica=0],[Topic=second_topic,Partition=2,Replica=0],[Topic=second_topic,Partition=4,Replica=0]. Halting deletion for topics Set(second_topic) (kafka.controller.TopicDeletionManager)
[2020-02-03 19:01:18,334] INFO [Topic Deletion Manager 0] Halted deletion of topics second_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2020-02-03 19:01:18,334] INFO [Topic Deletion Manager 0] Handling deletion for topics second_topic (kafka.controller.TopicDeletionManager)
[2020-02-03 19:01:18,335] INFO [Topic Deletion Manager 0] Retrying deletion of topic second_topic since replicas [Topic=second_topic,Partition=3,Replica=0],[Topic=second_topic,Partition=1,Replica=0],[Topic=second_topic,Partition=5,Replica=0],[Topic=second_topic,Partition=0,Replica=0],[Topic=second_topic,Partition=2,Replica=0],[Topic=second_topic,Partition=4,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2020-02-03 19:08:35,261] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-03 19:08:35,281] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-02-03 19:08:35,281] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-03 19:08:35,284] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-03 19:08:35,286] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-03 19:08:35,287] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-03 19:08:35,300] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 105) (kafka.controller.KafkaController)
[2020-02-03 19:08:35,310] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-03 19:08:35,321] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-03 19:08:35,330] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-03 19:08:35,330] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-03 19:08:35,331] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-03 19:08:35,331] INFO [Controller id=0] Current list of topics in the cluster: Set(second_topic, first_topic) (kafka.controller.KafkaController)
[2020-02-03 19:08:35,331] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-03 19:08:35,342] INFO [Controller id=0] List of topics to be deleted: second_topic (kafka.controller.KafkaController)
[2020-02-03 19:08:35,342] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-03 19:08:35,342] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-03 19:08:35,343] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(second_topic), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-03 19:08:35,343] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-03 19:08:35,356] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 19:08:35,362] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 19:08:35,364] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.30.191.222:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-03 19:08:35,385] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 19:08:35,385] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=second_topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=first_topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=first_topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=3,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 19:08:35,386] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-03 19:08:35,389] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-03 19:08:35,393] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(first_topic-0 -> OnlinePartition, second_topic-2 -> OfflinePartition, second_topic-4 -> OfflinePartition, second_topic-1 -> OfflinePartition, first_topic-2 -> OnlinePartition, first_topic-1 -> OnlinePartition, second_topic-3 -> OfflinePartition, second_topic-0 -> OfflinePartition, second_topic-5 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-02-03 19:08:35,393] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-02-03 19:08:35,395] INFO [Topic Deletion Manager 0] Handling deletion for topics second_topic (kafka.controller.TopicDeletionManager)
[2020-02-03 19:08:35,398] INFO [Topic Deletion Manager 0] Deletion of topic second_topic (re)started (kafka.controller.TopicDeletionManager)
[2020-02-03 19:08:35,399] INFO [Topic Deletion Manager 0] Topic deletion callback for second_topic (kafka.controller.TopicDeletionManager)
[2020-02-03 19:08:35,409] INFO [Topic Deletion Manager 0] Partition deletion callback for second_topic-3,second_topic-5,second_topic-0,second_topic-2,second_topic-1,second_topic-4 (kafka.controller.TopicDeletionManager)
[2020-02-03 19:08:35,442] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=second_topic,Partition=3,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=5,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=4,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-03 19:08:35,443] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=second_topic,Partition=3,Replica=0],[Topic=second_topic,Partition=1,Replica=0],[Topic=second_topic,Partition=5,Replica=0],[Topic=second_topic,Partition=0,Replica=0],[Topic=second_topic,Partition=2,Replica=0],[Topic=second_topic,Partition=4,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-03 19:08:35,445] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=second_topic,Partition=3,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=5,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=2,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=4,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-03 19:08:35,447] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-03 19:08:35,447] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-03 19:08:35,447] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-03 19:08:35,448] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-03 19:08:35,449] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-03 19:08:35,457] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-03 19:08:35,681] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(second_topic-3 -> KAFKA_STORAGE_ERROR, second_topic-5 -> KAFKA_STORAGE_ERROR, second_topic-0 -> KAFKA_STORAGE_ERROR, second_topic-2 -> KAFKA_STORAGE_ERROR, second_topic-1 -> KAFKA_STORAGE_ERROR, second_topic-4 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2020-02-03 19:08:35,682] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=second_topic,Partition=3,Replica=0],[Topic=second_topic,Partition=1,Replica=0],[Topic=second_topic,Partition=5,Replica=0],[Topic=second_topic,Partition=0,Replica=0],[Topic=second_topic,Partition=2,Replica=0],[Topic=second_topic,Partition=4,Replica=0]. Halting deletion for topics Set(second_topic) (kafka.controller.TopicDeletionManager)
[2020-02-03 19:08:35,683] INFO [Topic Deletion Manager 0] Halted deletion of topics second_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2020-02-03 19:08:35,683] INFO [Topic Deletion Manager 0] Handling deletion for topics second_topic (kafka.controller.TopicDeletionManager)
[2020-02-03 19:08:35,684] INFO [Topic Deletion Manager 0] Retrying deletion of topic second_topic since replicas [Topic=second_topic,Partition=3,Replica=0],[Topic=second_topic,Partition=1,Replica=0],[Topic=second_topic,Partition=5,Replica=0],[Topic=second_topic,Partition=0,Replica=0],[Topic=second_topic,Partition=2,Replica=0],[Topic=second_topic,Partition=4,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2020-02-03 19:09:22,373] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@25618e91, name=log4j:logger=kafka.controller (kafka.controller)
[2020-02-03 19:09:41,034] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-03 19:09:41,057] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2020-02-03 19:09:41,057] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-03 19:09:41,060] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-03 19:09:41,063] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-03 19:09:41,066] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-03 19:09:41,077] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 136) (kafka.controller.KafkaController)
[2020-02-03 19:09:41,086] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-03 19:09:41,098] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-03 19:09:41,113] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-03 19:09:41,114] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-03 19:09:41,114] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-03 19:09:41,115] INFO [Controller id=0] Current list of topics in the cluster: Set(second_topic, first_topic) (kafka.controller.KafkaController)
[2020-02-03 19:09:41,115] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-03 19:09:41,120] INFO [Controller id=0] List of topics to be deleted: second_topic (kafka.controller.KafkaController)
[2020-02-03 19:09:41,120] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-03 19:09:41,120] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-03 19:09:41,121] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(second_topic), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-03 19:09:41,121] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-03 19:09:41,132] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 19:09:41,142] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 19:09:41,144] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.30.191.222:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-03 19:09:41,170] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 19:09:41,170] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=second_topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=first_topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=first_topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=3,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 19:09:41,170] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-03 19:09:41,173] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-03 19:09:41,176] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(first_topic-0 -> OnlinePartition, second_topic-2 -> OfflinePartition, second_topic-4 -> OfflinePartition, second_topic-1 -> OfflinePartition, first_topic-2 -> OnlinePartition, first_topic-1 -> OnlinePartition, second_topic-3 -> OfflinePartition, second_topic-0 -> OfflinePartition, second_topic-5 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-02-03 19:09:41,177] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2020-02-03 19:09:41,180] INFO [Topic Deletion Manager 0] Handling deletion for topics second_topic (kafka.controller.TopicDeletionManager)
[2020-02-03 19:09:41,183] INFO [Topic Deletion Manager 0] Deletion of topic second_topic (re)started (kafka.controller.TopicDeletionManager)
[2020-02-03 19:09:41,183] INFO [Topic Deletion Manager 0] Topic deletion callback for second_topic (kafka.controller.TopicDeletionManager)
[2020-02-03 19:09:41,194] INFO [Topic Deletion Manager 0] Partition deletion callback for second_topic-3,second_topic-5,second_topic-0,second_topic-2,second_topic-1,second_topic-4 (kafka.controller.TopicDeletionManager)
[2020-02-03 19:09:41,231] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=second_topic,Partition=3,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=5,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=4,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-03 19:09:41,232] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=second_topic,Partition=3,Replica=0],[Topic=second_topic,Partition=1,Replica=0],[Topic=second_topic,Partition=5,Replica=0],[Topic=second_topic,Partition=0,Replica=0],[Topic=second_topic,Partition=2,Replica=0],[Topic=second_topic,Partition=4,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-03 19:09:41,234] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=second_topic,Partition=3,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=5,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=2,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=4,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-03 19:09:41,237] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-03 19:09:41,237] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-03 19:09:41,237] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-03 19:09:41,237] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-03 19:09:41,238] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-03 19:09:41,248] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-03 19:09:41,502] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(second_topic-3 -> KAFKA_STORAGE_ERROR, second_topic-5 -> KAFKA_STORAGE_ERROR, second_topic-0 -> KAFKA_STORAGE_ERROR, second_topic-2 -> KAFKA_STORAGE_ERROR, second_topic-1 -> KAFKA_STORAGE_ERROR, second_topic-4 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2020-02-03 19:09:41,505] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=second_topic,Partition=3,Replica=0],[Topic=second_topic,Partition=1,Replica=0],[Topic=second_topic,Partition=5,Replica=0],[Topic=second_topic,Partition=0,Replica=0],[Topic=second_topic,Partition=2,Replica=0],[Topic=second_topic,Partition=4,Replica=0]. Halting deletion for topics Set(second_topic) (kafka.controller.TopicDeletionManager)
[2020-02-03 19:09:41,507] INFO [Topic Deletion Manager 0] Halted deletion of topics second_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2020-02-03 19:09:41,507] INFO [Topic Deletion Manager 0] Handling deletion for topics second_topic (kafka.controller.TopicDeletionManager)
[2020-02-03 19:09:41,509] INFO [Topic Deletion Manager 0] Retrying deletion of topic second_topic since replicas [Topic=second_topic,Partition=3,Replica=0],[Topic=second_topic,Partition=1,Replica=0],[Topic=second_topic,Partition=5,Replica=0],[Topic=second_topic,Partition=0,Replica=0],[Topic=second_topic,Partition=2,Replica=0],[Topic=second_topic,Partition=4,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2020-02-03 19:10:06,497] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-03 19:10:06,519] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2020-02-03 19:10:06,519] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-03 19:10:06,522] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-03 19:10:06,524] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-03 19:10:06,526] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-03 19:10:06,538] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 167) (kafka.controller.KafkaController)
[2020-02-03 19:10:06,549] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-03 19:10:06,563] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-03 19:10:06,572] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-03 19:10:06,572] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-03 19:10:06,572] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-03 19:10:06,573] INFO [Controller id=0] Current list of topics in the cluster: Set(second_topic, first_topic) (kafka.controller.KafkaController)
[2020-02-03 19:10:06,573] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-03 19:10:06,588] INFO [Controller id=0] List of topics to be deleted: second_topic (kafka.controller.KafkaController)
[2020-02-03 19:10:06,589] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-03 19:10:06,589] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-03 19:10:06,589] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(second_topic), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-03 19:10:06,590] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-03 19:10:06,602] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 19:10:06,609] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 19:10:06,611] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.30.191.222:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-03 19:10:06,635] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 19:10:06,636] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=second_topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=first_topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=first_topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=second_topic,Partition=3,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-02-03 19:10:06,636] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-03 19:10:06,640] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-03 19:10:06,643] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(first_topic-0 -> OnlinePartition, second_topic-2 -> OfflinePartition, second_topic-4 -> OfflinePartition, second_topic-1 -> OfflinePartition, first_topic-2 -> OnlinePartition, first_topic-1 -> OnlinePartition, second_topic-3 -> OfflinePartition, second_topic-0 -> OfflinePartition, second_topic-5 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-02-03 19:10:06,644] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2020-02-03 19:10:06,647] INFO [Topic Deletion Manager 0] Handling deletion for topics second_topic (kafka.controller.TopicDeletionManager)
[2020-02-03 19:10:06,651] INFO [Topic Deletion Manager 0] Deletion of topic second_topic (re)started (kafka.controller.TopicDeletionManager)
[2020-02-03 19:10:06,651] INFO [Topic Deletion Manager 0] Topic deletion callback for second_topic (kafka.controller.TopicDeletionManager)
[2020-02-03 19:10:06,661] INFO [Topic Deletion Manager 0] Partition deletion callback for second_topic-3,second_topic-5,second_topic-0,second_topic-2,second_topic-1,second_topic-4 (kafka.controller.TopicDeletionManager)
[2020-02-03 19:10:06,696] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=second_topic,Partition=3,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=1,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=5,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=2,Replica=0],false),StopReplicaRequestInfo([Topic=second_topic,Partition=4,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-03 19:10:06,696] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=second_topic,Partition=3,Replica=0],[Topic=second_topic,Partition=1,Replica=0],[Topic=second_topic,Partition=5,Replica=0],[Topic=second_topic,Partition=0,Replica=0],[Topic=second_topic,Partition=2,Replica=0],[Topic=second_topic,Partition=4,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-02-03 19:10:06,698] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=second_topic,Partition=3,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=1,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=5,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=2,Replica=0],true),StopReplicaRequestInfo([Topic=second_topic,Partition=4,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-02-03 19:10:06,701] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-03 19:10:06,701] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-03 19:10:06,701] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-03 19:10:06,701] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-03 19:10:06,702] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-03 19:10:06,710] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-03 19:10:06,929] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(second_topic-3 -> KAFKA_STORAGE_ERROR, second_topic-5 -> KAFKA_STORAGE_ERROR, second_topic-0 -> KAFKA_STORAGE_ERROR, second_topic-2 -> KAFKA_STORAGE_ERROR, second_topic-1 -> KAFKA_STORAGE_ERROR, second_topic-4 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2020-02-03 19:10:06,930] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=second_topic,Partition=3,Replica=0],[Topic=second_topic,Partition=1,Replica=0],[Topic=second_topic,Partition=5,Replica=0],[Topic=second_topic,Partition=0,Replica=0],[Topic=second_topic,Partition=2,Replica=0],[Topic=second_topic,Partition=4,Replica=0]. Halting deletion for topics Set(second_topic) (kafka.controller.TopicDeletionManager)
[2020-02-03 19:10:06,932] INFO [Topic Deletion Manager 0] Halted deletion of topics second_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2020-02-03 19:10:06,932] INFO [Topic Deletion Manager 0] Handling deletion for topics second_topic (kafka.controller.TopicDeletionManager)
[2020-02-03 19:10:06,933] INFO [Topic Deletion Manager 0] Retrying deletion of topic second_topic since replicas [Topic=second_topic,Partition=3,Replica=0],[Topic=second_topic,Partition=1,Replica=0],[Topic=second_topic,Partition=5,Replica=0],[Topic=second_topic,Partition=0,Replica=0],[Topic=second_topic,Partition=2,Replica=0],[Topic=second_topic,Partition=4,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
